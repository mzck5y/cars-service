apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging-onicloud
  namespace: onicloud
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: elchefy.gonzalez@gmail.com
    privateKeySecretRef:
      name: letsencrypt-staging-onicloud
    solvers:
    - http01:
        ingress:
          class: traefik
---
apiVersion: cert-manager.io/v1alpha2
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod-onicloud
  namespace: onicloud
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: elchefy.gonzalez@gmail.com
    privateKeySecretRef:
      name: letsencrypt-prod-onicloud
    solvers:
    - http01:
        ingress:
          class: traefik
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cars-api-deployment
  namespace: onicloud
  labels:
    app: cars
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cars
  template:
    metadata:
      labels:
        app: cars
    spec:
      containers:
      - name: cars
        image: mzck5y/cars-api:1.1
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: cars-api
  namespace: onicloud
spec:
  type: NodePort
  selector:
    app: cars
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cars-api-ingress
  namespace: onicloud 
  annotations:
    kubernetes.io/ingress.class: "traefik"
    cert-manager.io/cluster-issuer: letsencrypt-staging-onicloud
    traefik.ingress.kubernetes.io/preserve-host: "true"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  tls:
  - hosts:
    - oni.mivaro.net
    secretName: oni-mivaro-net-tls-cert
  rules:
  - host: oni.mivaro.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cars-api
            port:
              number: 80